# Задача 1: Три списка
# Даны три списка.
# array_1 = [1, 5, 10, 20, 40, 80, 100]
# array_2 = [6, 7, 20, 80, 100]
# array_3 = [3, 4, 15, 20, 30, 70, 80, 120]

# Нужно выполнить две задачи:
# 1. найти элементы, которые есть в каждом списке;
# 2. найти элементы из первого списка, которых нет во втором и третьем
# списках.
# Каждую задачу нужно выполнить двумя способами:
# 3. без использования множеств;
# 4. с использованием множеств.
# Решение 1 задачи с помощью создания множеств
# array_1 = [1, 5, 10, 20, 40, 80, 100]
# array_2 = [6, 7, 20, 80, 100]
# array_3 = [3, 4, 15, 20, 30, 70, 80, 120]

# common_elements = set(array_1) & set(array_2) & set(array_3)

# print(common_elements)

# Решение 1 задачи без множеств:

# array_1 = [1, 2, 3, 4, 5]
# array_2 = [3, 4, 5, 6, 7]
# array_3 = [0, 3, 4, 8, 9]

# all_elems = array_1 + array_2 + array_3 # Объединяем все списки в один
# new_elems_1 = []

# for elem in all_elems:
# # Проверяем, если элемент не добавлен ранее и присутствует во всех трех списках
#      if elem not in new_elems_1 and all(elem in array for array in [array_1, array_2, array_3]):
# 	     new_elems_1.append(elem) # Добавляем элемент в результат
# print("Решение без множеств:", new_elems_1)

# Решение 2 задачи с использованием множеств:
# array_1 = [1, 5, 10, 20, 40, 80, 100]
# array_2 = [6, 7, 20, 80, 100]
# array_3 = [3, 4, 15, 20, 30, 70, 80, 120]

# new_elems_2_set = set(array_1) - set(array_2) - set(array_3) # Разность множеств
# print("Решение с множествами:", new_elems_2_set)

# Решение 2 задачи без множеств:
# array_1 = [1, 5, 10, 20, 40, 80, 100]
# array_2 = [6, 7, 20, 80, 100]
# array_3 = [3, 4, 15, 20, 30, 70, 80, 120]

# new_elems_2 = []
# for elem in array_1: # Проверяем, если элемент отсутствует во втором и третьем списках
# 	if elem not in array_2 and elem not in array_3:
# 		new_elems_2.append(elem) # Добавляем элемент в результат
# print("Решение без множеств:", new_elems_2)

# Задача 2: Пользователь вводит строку. Необходимо написать программу, 
# которая определяет, существует ли у этой строки перестановка, при которой 
# она станет палиндромом. Затем она должна выводить соответствующее 
# сообщение.

# Пример 1
# Введите строку: aab
# Можно сделать палиндромом
# Пример 2
# Введите строку: aabc
# Нельзя сделать палиндромом

# Эталонное решение:
# def is_poly(string):

#      char_dict = dict() # Создаем словарь для подсчета количества вхождений каждого символа

#      for i_sym in string: # Проходим по каждому символу в строке

#           char_dict[i_sym] = char_dict.get(i_sym, 0) + 1 # Увеличиваем счетчик для текущего символа

#      odd_count = 0 # Переменная для подсчета символов с нечетным количеством вхождений

#      for i_value in char_dict.values(): # Проходим по значениям словаря (количеству вхождений символов)

#           if i_value % 2 != 0: # Если количество вхождений нечетное, увеличиваем счетчик нечетных
#                odd_count += 1

#      return odd_count <= 1 # Палиндром может быть составлен, если не более одного символа имеет нечетное количество вхождений

# my_string = input('Введите строку: ') # Запрашиваем у пользователя ввод строки

# if is_poly(my_string): # Проверяем, можно ли сделать палиндром из введенной строки
#      print('Можно сделать палиндромом')
# else:
#      print('Нельзя сделать палиндромом')

# Задача 3: Словарь синонимов
# Одна библиотека поручила вам написать программу для оцифровки словарей
# синонимов. На вход в программу подаётся N пар слов. Каждое слово является
# синонимом для своего парного слова.
# Реализуйте код, который составляет словарь синонимов (все слова в словаре
# различны), затем запрашивает у пользователя слово и выводит на экран его
# синоним. Обеспечьте контроль ввода: если такого слова нет, выведите ошибку
# и запросите слово ещё раз. При этом проверка не должна зависеть от регистра
# символов.
# Пример
# Введите количество пар слов: 3
# Первая пара: Привет — Здравствуйте
# Вторая пара: Печально — Грустно
# Третья пара: Весело — Радостно
# Введите слово: интересно
# Такого слова в словаре нет.
# Введите слово: здравствуйте
# Синоним: Привет

# synonyms_dict = dict()

# pairs_count = int(input('Введите количество пар слов: '))

# for i_pair in range(pairs_count):
# 	first_word, second_word = input(f'{i_pair + 1} пара: ').lower().split(' - ')
	
# 	synonyms_dict[first_word] = second_word # Добавляем пары в словарь
# 	synonyms_dict[second_word] = first_word
	
# while True:
# 	word = input('Введите слово: ').lower()
# 	if word in synonyms_dict: # Проверяем, есть ли слово в словаре
# 		print('Синоним: ', synonyms_dict[word].capitalize())
# 		break
# 	else:
# 		print('Такого слова в словаре нет.') # Если нет, выводим сообщение об ошибке